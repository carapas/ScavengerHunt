@model ScavengerHunt.Web.Models.UserStunt

@{
    ViewBag.Title = Resources.Edit;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Resources.Stunts</h4>
        <hr/>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Stunt.Title)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Stunt.Title)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Stunt.ShortDescription)
            </dt>

            <dd>
                @Html.Markdown(Model.Stunt.ShortDescription)
            </dd>
            
            <dt>
                @Html.DisplayNameFor(model => model.Stunt.JudgeNotes)
            </dt>

            <dd>
                @Html.Markdown(Model.Stunt.JudgeNotes)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Stunt.MaxScore)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Stunt.MaxScore)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Stunt.Type)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Stunt.Type)
            </dd>

        </dl>
        

        <h4>@Resources.Stunts</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.DateUpdated, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DateUpdated)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Submission, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Submission)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Score)
                @Html.ValidationMessageFor(model => model.Score)
                <input type="button" class="btn" value="Max" onclick="setMaxScore()" />
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.JudgeNotes, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.JudgeNotes, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JudgeNotes)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JudgeFeedback, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.JudgeFeedback, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JudgeFeedback)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Resources.Save class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(Resources.BackToList, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $("[data-toggle=tooltip").tooltip();

    var setMaxScore = function() {
        $("#Score").val(@Model.Stunt.MaxScore);
    };
</script>

}
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ScavengerHunt" xml:space="preserve">
    <value>Puzzle Wars</value>
  </data>
  <data name="StuntList" xml:space="preserve">
    <value>Puzzle list</value>
  </data>
  <data name="BonusPoints" xml:space="preserve">
    <value>Bonus Points</value>
  </data>
  <data name="Stunts" xml:space="preserve">
    <value>Puzzles</value>
  </data>
  <data name="Team_notes" xml:space="preserve">
    <value>Team notes</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateOrJoinTeam" xml:space="preserve">
    <value>Create or Join a team!</value>
  </data>
  <data name="CurrentRankings" xml:space="preserve">
    <value>Current Rankings</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="HomeJumbotronLead" xml:space="preserve">
    <value>In a galaxy not so far away, students from the Université de Sherbrooke join their forces to resolve puzzles.</value>
  </data>
  <data name="Join" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="JoinExistingTeam" xml:space="preserve">
    <value>Join an existing team</value>
  </data>
  <data name="JoinExistingTeamExplanation" xml:space="preserve">
    <value>You must choose a side before doing puzzles.</value>
  </data>
  <data name="Members" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SourceCode" xml:space="preserve">
    <value>Source code</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StartJourney" xml:space="preserve">
    <value>Start your journey!</value>
  </data>
  <data name="StartJourneyExplanation" xml:space="preserve">
    <value>You are already part of a team and are ready to rock!</value>
  </data>
  <data name="Stunt" xml:space="preserve">
    <value>Puzzle</value>
  </data>
  <data name="StuntActivity" xml:space="preserve">
    <value>Puzzle activity</value>
  </data>
  <data name="TeamStatus" xml:space="preserve">
    <value>Your {0} members have amassed a total of {1} points in {2} puzzles.</value>
  </data>
  <data name="YourTokenIs" xml:space="preserve">
    <value>Your secret token is</value>
  </data>
  <data name="Judged" xml:space="preserve">
    <value>Judged</value>
  </data>
  <data name="YourBonusPoints" xml:space="preserve">
    <value>You also have {0} bonus points</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="MaximumScore" xml:space="preserve">
    <value>Maximum Score</value>
  </data>
  <data name="JudgeNotes" xml:space="preserve">
    <value>Judge Notes</value>
  </data>
  <data name="JudgeFeedback" xml:space="preserve">
    <value>Judge Feedback</value>
  </data>
  <data name="LongDescription" xml:space="preserve">
    <value>Long description</value>
  </data>
  <data name="ShortDescription" xml:space="preserve">
    <value>Short description</value>
  </data>
  <data name="Slideshow" xml:space="preserve">
    <value>Slideshow</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Achievement" xml:space="preserve">
    <value>Achievement</value>
  </data>
  <data name="AreYouReady" xml:space="preserve">
    <value>Which side of the force will you join???</value>
  </data>
  <data name="Asign" xml:space="preserve">
    <value>Asign</value>
  </data>
  <data name="capped" xml:space="preserve">
    <value>capped</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="ChangePasswordForm" xml:space="preserve">
    <value>Change Password Form</value>
  </data>
  <data name="Collapsible" xml:space="preserve">
    <value>Collapsible</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="ContactUser" xml:space="preserve">
    <value>Contact user</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="DataManagement" xml:space="preserve">
    <value>DataManagement</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteValidation" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Documentation" xml:space="preserve">
    <value>Documentation</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Expecting" xml:space="preserve">
    <value>Expecting</value>
  </data>
  <data name="ExpectingType" xml:space="preserve">
    <value>The judges are expecting a</value>
  </data>
  <data name="FlagSubmissions" xml:space="preserve">
    <value>Flag submissions</value>
  </data>
  <data name="For" xml:space="preserve">
    <value>for</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="HasSlideshow" xml:space="preserve">
    <value>Has slideshow</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Judgement" xml:space="preserve">
    <value>Judgement</value>
  </data>
  <data name="Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="Keyword" xml:space="preserve">
    <value>Keyword</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="ManageTeam" xml:space="preserve">
    <value>Manage team</value>
  </data>
  <data name="ManageUsers" xml:space="preserve">
    <value>Manage Users</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="NumberOfRanks" xml:space="preserve">
    <value>Number of ranks</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordLengthError" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="PasswordMismatchError" xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>points!</value>
  </data>
  <data name="Published" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="Ranks" xml:space="preserve">
    <value>Ranks</value>
  </data>
  <data name="Recommend" xml:space="preserve">
    <value>May we recommend</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="RolesForUser" xml:space="preserve">
    <value>Roles for user</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="Scoreboard" xml:space="preserve">
    <value>Scoreboard</value>
  </data>
  <data name="ScoreToAchieve" xml:space="preserve">
    <value>Score to obtain rank</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Stats" xml:space="preserve">
    <value>Stats</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="Teams" xml:space="preserve">
    <value>Teams</value>
  </data>
  <data name="TeamsScoreboard" xml:space="preserve">
    <value>Teams scoreboard</value>
  </data>
  <data name="Token" xml:space="preserve">
    <value>Token</value>
  </data>
  <data name="Translations" xml:space="preserve">
    <value>Translations</value>
  </data>
  <data name="Tries" xml:space="preserve">
    <value>Tries</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="YourAreLoggedInAs" xml:space="preserve">
    <value>You're logged in as</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Secret" xml:space="preserve">
    <value>Secret</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="Leader" xml:space="preserve">
    <value>Leader?</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="CompletedNumber" xml:space="preserve">
    <value>Number of validations</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>Difficulty</value>
  </data>
  <data name="Rules" xml:space="preserve">
    <value>Rules</value>
  </data>
  <data name="AchievementPoints" xml:space="preserve">
    <value>Achievement Points</value>
  </data>
  <data name="Rules1" xml:space="preserve">
    <value>The participants must not share the solutions.</value>
  </data>
  <data name="Rules2" xml:space="preserve">
    <value>The administrators cannot take part in the puzzles.</value>
  </data>
  <data name="Rules3" xml:space="preserve">
    <value>Do not ask to the administrators for the solutions.</value>
  </data>
  <data name="Rules4" xml:space="preserve">
    <value>If you find a bug ou if you think a puzzle in not faire, please contact us on our facebook page.</value>
  </data>
  <data name="Rules5" xml:space="preserve">
    <value>We will not tolerate bruteforce.</value>
  </data>
  <data name="Rules6" xml:space="preserve">
    <value>Have fun and good luck, may the best team win!</value>
  </data>
  <data name="Easy" xml:space="preserve">
    <value>Facile</value>
  </data>
  <data name="Hard" xml:space="preserve">
    <value>Hard</value>
  </data>
  <data name="Insane" xml:space="preserve">
    <value>Insane</value>
  </data>
  <data name="Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="VeryHard" xml:space="preserve">
    <value>Very hard</value>
  </data>
</root>